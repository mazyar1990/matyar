services:
  # The Application's Web Server (Nginx)
  app:
    image: nginx:1.25-alpine
    container_name: matyar
    restart: unless-stopped
    volumes:
      # We only need to mount the files Nginx serves, not the whole app.
      # This still works, but for production you'd ideally use a volume 
      # just for the public directory.
      - ./:/var/www/html 
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "9001:80"
    environment:
      - VIRTUAL_HOST=matyar.alphaxsoft.com
      - VIRTUAL_PORT=80
    depends_on:
      - php
      - db
    networks:
      - default
      - core_network

  # PHP-FPM Service
  php:
    build:
      context: .
      dockerfile: Dockerfile
    # ✅ FIXED: Give the built image a name
    image: matyar-app:latest 
    container_name: matyar_php
    restart: unless-stopped
    # ❌ REMOVED: The volume mount is gone. The code is in the image.
    networks:
      - default

  # Database Service (MySQL)
  db:
    image: mysql:8.0
    container_name: matyar_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - default

  # Queue Worker (Optional)
  worker:
    # ✅ FIXED: Use the same image that the 'php' service built
    image: matyar-app:latest 
    # ✅ FIXED: Corrected typo in container name
    container_name: matyar_worker 
    restart: unless-stopped
    command: php artisan queue:work --sleep=3 --tries=3
    # ❌ REMOVED: The volume mount is gone here too.
    depends_on:
      - php
      - db
    networks:
      - default

volumes:
  db-data:
    driver: local

networks:
  default:
    driver: bridge
  core_network:
    external: true
    name: alphax_network